---
# Ensure distribution facts are gathered
- name: "Main | Ensure ansible_facts used by role"
  ansible.builtin.setup:
    gather_subset: min

# Set variables for this platform
- name: "Main | Set platform/version specific variables"
  ansible.builtin.include_vars: "{{ __role_found_vars }}"
  vars:
    __role_find_vars:
      files: ["{{ __role_var_search }}"]
      skip: true
      paths: ["{{ role_path }}/vars"]
    __role_found_vars: "{{ lookup('ansible.builtin.first_found', __role_find_vars) }}"
  when: __role_found_vars | length > 0
  loop: "{{ __role_file_search_order | reverse | unique }}"
  loop_control:
    loop_var: __role_var_search

# Assert variables are set correctly for this platform
- name: "Main | Assert platform/version specific variables"
  ansible.builtin.include_tasks: "{{ __role_found_asserts }}"
  vars:
    __role_find_asserts:
      files: ["{{ __role_assert_search }}"]
      skip: true
      paths: ["{{ role_path }}/assert"]
    __role_found_asserts: "{{ lookup('ansible.builtin.first_found', __role_find_asserts) }}"
  when: __role_found_asserts | length > 0
  loop: "{{ __role_file_search_order | reverse | unique }}"
  loop_control:
    loop_var: __role_assert_search

# Run tasks specific to this platform
- name: "Main | Run platform/version specific tasks"
  ansible.builtin.include_tasks: "{{ __role_found_tasks }}"
  vars:
    __role_find_tasks:
      files: "{{ __role_file_search_order }}"
      skip: true
      paths: ["{{ role_path }}/tasks/{{ __role_action_task }}"]
    __role_found_tasks: "{{ lookup('ansible.builtin.first_found', __role_find_tasks) }}"
  when: __role_found_tasks | length > 0
  loop: "{{ [__role_action | default('setup')] | flatten }}"
  loop_control:
    loop_var: __role_action_task

# This is sometimes can be used when the same tasks must be ran on every host in parallel
- name: "Main | tasks that always run"
  ansible.builtin.include_tasks: "{{ __role_found_tasks }}"
  vars:
    __role_find_tasks:
      files: ["always.yml"]
      skip: true
      paths: ["{{ role_path }}/tasks/{{ __role_action_task }}"]
    __role_found_tasks: "{{ lookup('ansible.builtin.first_found', __role_find_tasks) }}"
  when: __role_found_tasks | length > 0
  loop: "{{ [__role_action | default('setup')] | flatten }}"
  loop_control:
    loop_var: __role_action_task

...
